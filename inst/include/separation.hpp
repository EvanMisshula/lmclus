# ifndef SEP_H
# define SEP_H

#include <armadillo>
#include <iostream>
#include <vector>

/* Separation
 *-----------
 * class used to store separation info generated by kittler's thresholding algorithm.
 * the separation is considered to be the valley between two modes in a histogram.
 * the goodness of the separation is measured by the: valley's width * valley's depth.
 */
class Separation
{
public:

	
	double get_width() const {
		return sep_width;
	}
	double get_depth() const {
		return sep_depth;
	}
	double get_criteria() const {
		return criteria;
	}
	double get_threshold () const {
		return threshold;
	}
	arma::uvec get_histo() const {
		return histo;
	}
	arma::mat get_projection () const {
		return projection;
	}
	arma::rowvec get_origin() const {
		return origin;
	}
	void reset(){
		criteria = -1;
	}
	
	Separation(double w, double d, double thres, const arma::rowvec &org ,const arma::mat &p, arma::uvec &h):
		origin(org),projection(p),sep_width(w),sep_depth(d),threshold(thres),histo(h)
	{
		criteria=sep_width*sep_depth;
	}

	Separation ():
		origin(1),projection(1,1),sep_width(0),sep_depth(0),threshold(0),criteria(-1){}
		
	virtual ~Separation () {};
	
private:
	arma::rowvec origin;                  // origin of subspace, used to find points that will be separated from data
	arma::mat projection;                 // subspace projection matrix, used to find points that will be separated from data
	double sep_width;                     // separation width
	double sep_depth;                     // separation depth
	double threshold;                     // histogram's threshold
	arma::uvec histo;                      // the histogram kittler's algorithm is applied on		
	double criteria;                      // goodness of separation (width*depth)

};


# endif
